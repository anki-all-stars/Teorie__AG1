{
    "__type__": "Deck",
    "children": [],
    "crowdanki_uuid": "1b2618ca-7d99-11eb-8324-38d5479d0148",
    "deck_config_uuid": "51fd0716-67e9-11eb-a855-38d5479d0148",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoAgain": 0,
            "autoAlert": 0,
            "autoAnswer": 0,
            "autoplay": true,
            "crowdanki_uuid": "51fd0716-67e9-11eb-a855-38d5479d0148",
            "currentValue": 120,
            "dyn": false,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 0,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxLife": 120,
            "maxTaken": 60,
            "name": "[Intense] English C1",
            "new": {
                "bury": false,
                "delays": [
                    1.0,
                    10.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    0
                ],
                "order": 0,
                "perDay": 60,
                "separate": true
            },
            "recover": 5,
            "replayq": true,
            "rev": {
                "bury": false,
                "ease4": 1.3,
                "fuzz": 0.05,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "minSpace": 1,
                "perDay": 100
            },
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 0,
    "extendRev": 0,
    "media_files": [],
    "name": "Teorie::AG1",
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n color: black;\n text-align: center;\n background-color: white;\n}\n\n.solution {\n text-align: left;\n}",
            "flds": [
                {
                    "font": "Liberation Sans",
                    "media": [],
                    "name": "Question",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Liberation Sans",
                    "media": [],
                    "name": "Solution",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Math",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [],
            "tmpls": [
                {
                    "afmt": "{{Question}}\n\n<hr id=answer>\n\n<div style=\"text-align: center;\">\n    <div style=\"display: inline-block; text-align: left;\">\n\t\t{{Solution}}\n    </div>\n</div>",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Question}}\n"
                }
            ],
            "type": 0,
            "vers": []
        }
    ],
    "notes": [
        {
            "__type__": "Note",
            "fields": [
                "AG1?",
                "AG1!"
            ],
            "guid": "H17v]7f_|+",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice Neorientovaný graf",
                "Neorientovaný graf je uspořádaná dvojice \\( (V, E) \\)<div><br></div><div>\\(V\\) je <b>neprázdná konečná množina vrcholů</b></div><div>\\( E \\) je <b>množina hran</b><div><br></div><div>Hrana je dvouprvková podmnožina \\( V \\)<br></div></div>"
            ],
            "guid": "ntF`U-NFEt",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Rovnice s hranami",
                "<div>Nechť neorientovaný graf \\( (V,E) \\)</div><div><br></div>Platí \\( E \\subseteq 2^V \\)&nbsp;<div><br></div><div>Množina všech dvouprvkových podmožin V \\( V \\choose 2 \\)<br><br>Platí \\( E \\subseteq {V\\choose2} \\subseteq 2^V&nbsp; \\)</div>"
            ],
            "guid": "vYFS!b-y0=",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Úplný graf \\( K_n \\), kde \\( n \\geq 1 \\)",
                "Úplný graf na \\( n \\) vrcholech \\( K_n \\) je graf \\( ( V , {{V}\\choose{2}} ) \\), kde \\( | V | = n \\)"
            ],
            "guid": "h^IEk82wtG",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Úplný bipartitní graf \\( K_{n_1, n_2} \\)",
                "Nechť n1 ≥ 1 a n2≥1.<div><br></div><div>Úplný bipartitní graf \\(K_{n_1,n_2}\\) tvořený dvěma partitami o \\(n_1\\) a \\(n_2\\) vrcholech je graf \\( (A∪B,\\{\\{a, b\\}|a∈A, b∈B\\}) \\), kde \\( A∩B=∅,|A| = n_1, |B|=n_2 \\)</div>"
            ],
            "guid": "FNP3vRmHa~",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice cesty \\( P_m \\), kde \\( m \\geq 0 \\)",
                "Cesta délky m (s m hranami) \\( P_m \\) je graf<div><br></div><div>\\( ( \\{ 0, ..., m \\}, \\{\\{i, i + 1 \\} | i \\in \\{0, ..., m - 1\\} \\} \\)</div>"
            ],
            "guid": "D~|i[2V{/t",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Kružnice \\( C_n \\) kde \\( n \\geq 3 \\)",
                "Kružnice délky \\( n \\) ( s \\( n \\) vrcholy) \\( C_n \\) je graf<div><br></div><div>\\( ( \\{ 1, ..., n \\}, \\{\\{ i, i + 1 \\} | i \\in \\{1, ..., n - 1\\} \\cup \\{\\{ 1, n \\}\\} ) \\)<br></div>"
            ],
            "guid": "gdJR&h`4e<",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Hvězda \\( S_n \\) \\( n \\geq 1 \\)",
                "Hvězda s n paprsky \\( S_n \\) je graf \\( K_{1, n} \\)"
            ],
            "guid": "lDNSO+bx[;",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Nechť G je graf, co jsou \\( V(G), E(G) \\) ?",
                "Jeho množina vrcholů a hran značíme \\( V(G), E(G) \\) respektive<div><br></div><div>Počet vrcholů a počet hran je \\( n = |V(G)| \\) a \\( m = |E(G)| \\) respektive</div>"
            ],
            "guid": "J24K~W$L~P",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Koncové vrcholy, soused, incidentní vrchol ke hraně, \\( e = \\{ u ,v \\} \\) je hrana grafu G",
                "Vrcholy \\( u \\) a \\( v \\) jsou koncové vrcholy hrany \\( e \\)<div><br></div><div>\\( u \\) je sousedem \\( v \\) v \\( G \\) ( a naopak )<br></div><div><br></div><div>\\( u \\) je incidentní s hranou \\( e \\) ( a stejně pro v)<br></div>"
            ],
            "guid": "sxUD{Jn@0W",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Doplňek grafu \\( G \\) , \\( \\bar{G}&nbsp; \\)",
                "Doplňek \\( \\bar{G} \\) grafu \\( G = (V, E) \\) je graf \\( (V, {V\\choose2} \\setminus E ) \\)"
            ],
            "guid": "hz9Z[Q`SzH",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Izomorfismus grafů G, H",
                "Funkce \\( f: V(G) \\rightarrow V(H) \\) je izomorfismus grafů \\( G \\) a \\( H \\), pokud<div>&nbsp;- \\( f \\) je bijekce</div><div>&nbsp;- pro každou dvojici vrcholů \\( u, v \\) z \\( V(G)&nbsp; \\) platí \\( \\{u, v \\} \\in E(G) \\) právě tehdy, když \\( \\{ f(u), f(v) \\} \\in E(H) \\)</div>"
            ],
            "guid": "GzD#aWWrp>",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Izomorfismus grafů, pt2",
                "Dva grafy \\( G \\) a \\( H \\) jsou&nbsp;izomorfní, pokud existuje izomorfismus grafů \\( G \\) a \\( H \\).Tento fakt značíme \\( G \\simeq H \\)"
            ],
            "guid": "eL7qkH%F5%",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automorfismus grafu G",
                "Automorfismus grafu G je izomrfismus grafu se sebou samým, tedy funkce \\( f: V(G) \\rightarrow V(G) \\) taková, že<br>- \\( f \\) je bijekce<br>- \\( \\forall u, v \\in V(G): \\{ u, v \\} \\in E(G) \\Leftrightarrow \\{ f(u), f(v) \\} \\in E(G) \\)"
            ],
            "guid": "j*6D(_::l~",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Počty grafů lemma",
                "Na \\( n \\)-prvkové množině vrcholů \\( V \\) je právě \\( 2^{n\\choose2} \\) různých grafů"
            ],
            "guid": "Okh:3,y3d+",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice okolí, stupně, na grafu \\( G = (V, E) \\), \\( v \\in V \\)",
                "Symbolem \\( deg_G(v) \\) označíme počet hran grafu G obsahujících vrchol v<br>&nbsp;- toto číslo nazýváme stupněm vrcholu \\( v \\)<br><br>Symbolem \\( N_G(v) \\) označíme množinu všech sousedů vrcholu \\( v \\) v grafu G == otevřené okolí<br><br>\\( N_G[v] = N_G(v) \\cup \\{v\\} \\) nazveme uzavřeným okolám vrcholu \\( v \\) v grafu G<br>"
            ],
            "guid": "opavQ]=71c",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Regulární graf",
                "Graf je \\( r \\)-regulární, pokud \\( deg(v) \\) každého vrchole je r<br>Graf je regulární, pokud je \\( r \\)-regulární"
            ],
            "guid": "yltVk6Tb:z",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Izolovaný vrchol v",
                "Takový, pro než platí \\( deg(v) = 0 \\)"
            ],
            "guid": "t(*Qz)dr2-",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Princip sudosti",
                "\\( \\forall G = (V, E) : \\sum_{v \\in V } deg_G(v) = 2|E| \\)"
            ],
            "guid": "A4.xvzJ8H3",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Důkaz principu sudosti",
                "Číslo \\( deg_G(v) \\) udává počet hran obsahujících \\( v \\). Posčítáme-li tedy stupně všech vrcholů, započítáme každou hranu přesně dvakrát, což dává součet \\( 2|E| \\)"
            ],
            "guid": "u:eW^=X8c2",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Matice sousednosti, pro graf \\( G = (V, E) \\) s \\( V = \\{ v_1, v_2, ..., v_n \\} \\)",
                "Matice sousednosti grafu \\( G \\) je čtvercová matice \\( A_G = (a_{ij})_{i,j=1}^n \\) definována předpisem<br><br>\\( a_{i, j} = 1\\) když \\( \\{ v_i, v_j \\} \\in E \\) a<br><br>\\( a_{i,j} = 0 \\) jinak<br>"
            ],
            "guid": "qW*+-S)mdF",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Podgraf H grafu G",
                "Graf H je podgrafem grafu \\( G \\), když \\( V(H) \\subseteq V(G) \\)<br><div>&nbsp;a \\( E(H) \\subseteq E(G) \\). Značíme \\( H \\subseteq G \\)</div><div><br></div><div>Graf H je indukovaným podgrafem grafu G, když \\( V(H) \\subseteq V(G) \\) a \\( E(H) = E(G) \\cap {V(H)\\choose2} \\), tuto skutečnost značíme \\( H \\leq G \\)</div>"
            ],
            "guid": "uCLX6No|{V",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": [
                "veto_otazky"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Klika grafu G",
                "<div>Klika v grafu \\( G \\) je podmnožina vrcholů, z nichž každé dva jsou sousední&nbsp; (čili, spojeny hranou)<br></div>"
            ],
            "guid": "r|5D_Y:2ZF",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Nezávislá množina grafu G",
                "Nezávislá množinav grafu G je podmnožina vrcholů, z nichž žádné dva nejsou sousední (čili spojeny hranou)"
            ],
            "guid": "A*Xg]s46bP",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Zakořeněný strom definice",
                "Zakořeněný strom je strom T, ve kterém je jeden vchol \\( r \\in V(T) \\) označen jako kořen"
            ],
            "guid": "f?{Aw]KrYT",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice souvislého grafu",
                "Graf G je souvislý, jestliže v něm pro každé jeho dva vrcholy u, v existuje u-v-cesta<div>Jinak je graf nesouvislý.</div>"
            ],
            "guid": "K[^80BqiR4",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice souvislé komponenty",
                "Indukovaný graf H grafu G je souvislou komponentou, pokud<div><br></div><div>- je souvislý a</div><div>- neexistuje žádný souvislý podgraf \\(F, F \\neq G\\), grafu G takový, že \\(H \\subseteq F\\)</div><div><br></div><div>Souvislá komponenta je tedy v inkluzi maximální souvislá podgraf grafu G</div>"
            ],
            "guid": "HLk-Z$C`X3",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Pozorování o souvislosti grafu vůči komponentě",
                "Graf je souvislý právě tehdy, když obsahuje jedinou souvislou komponentu"
            ],
            "guid": "Ok*RKt`|:-",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Binární relace squigglyarrow",
                "Binární relace (squigglyarrow) nad vrcholy grafu G definována předpisem<div><br></div><div>\\(u (squigglyarrow) v \\Leftrightarrow \\exists u-v-\\) cesta v \\(G\\)</div><div><br></div><div>je ekvivalence, jejichž třídy ekvivalence jsou souvislé komponenty grafu G</div>"
            ],
            "guid": "fuoJGP`$42",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Vlastnost \\(BFS(s)\\) o konečném čase a označenosti",
                "Algoritmus BFS skončí v konečném čase<br><br>Označí právě a jen políčka volně dostupná z \\(s\\)"
            ],
            "guid": "AOJ.?Jidq0",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Složitost \\(BFS\\,graf(G, s)\\)",
                "Algoritmus \\(DFS\\,graf(G,s )\\) má při reprezentaci grafu \\(G\\) seznamem sousedů časovou i paměťovou složitost \\(O(|V| + |E|)\\)"
            ],
            "guid": "nV5bqF#)l2",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice stromu, lesu, listu",
                "Graf G nazveme stromem, pokud je souvislý a neobsahuje žádnou kružnici<div><br></div><div>Graf G nazveme lesem, pokud neobsahuje žádnou kružnici</div><div><br></div><div>Vrchol v grafu \\(G\\) nazveme listem, pokud \\(deg_G(v) = 1\\)</div>"
            ],
            "guid": "gBr]4!m>8t",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Věta o existenci listů",
                "Každý strom T s alespoň 2 vrcholy obsahuje alespoň 2 listy"
            ],
            "guid": "D~.(M:2Y[G",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Operace odebrání a přidání listu",
                "\\(G = (V, E)\\), ve kterém je list \\(v\\)<div><br></div><div>Označme&nbsp;&nbsp;\\(w \\in V\\)&nbsp;souseda v \\(G\\). Pak <b>odebráním listu</b> v z \\(G\\) je operace, kterou vznikne graf \\(G - v = (V \\setminus \\{v\\}, E \\setminus \\{\\{ w, v \\}\\})\\)</div><div><br></div><div>Zvolme \\(w \\in V\\). Pak přidáním listu \\(v, v \\notin V\\), ke grafy \\(G\\) ve vrcholu \\(w\\) je operace, kteou vznikce graf \\(G + v = (V \\cup \\{v\\}, E \\cup \\{\\{w, v\\}\\})\\)</div>"
            ],
            "guid": "up^(x;-wzW",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Věta o odebírání a přidávání listů",
                "Operace odebrání listu z grafu a přidáním listu ke grafu G nemění jeho souvislost a existenci kružnic"
            ],
            "guid": "IPGGCuPSx&",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Věta o vlastnosti stromů",
                "Nechť \\(G = (V, E)\\) je graf. Pak následující tvrzení jsou ekvivalentní:<div><br></div><div>1. \\(G\\) je storm</div><div>2. Pro každé dva vrcholy \\(u, v \\in V\\) existuje právě jedna \\(u-v\\)-cesta</div><div>3. \\(G\\) je souvislý a vynecháním libovolné hrany vznikne nesouvislý graf</div><div>4. \\(G\\) je souvislý a \\(|V| = |E| + 1\\)</div>"
            ],
            "guid": "PdBIb),;%4",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice orientovaného grafu",
                "Orientovaný graf \\(G\\) je uspořádáná dvojce \\((V, E)\\), kde<div><br></div><div>- \\(V\\) je neprázdná konečná množina vrcholů (nebo také uzlů)</div><div>- \\(E\\) je množina orientovaná hran (nebo také šipek)</div><div><br></div><div>Orientovaná hrana \\((u, v) \\in E\\) je uspořádaná dvojce různých vrcholů \\(u, v \\in V\\). Říkáme, že \\(u\\) je předchůdce \\(v\\) a \\(v\\) je následník \\(u\\). Platí tedy \\(E \\subseteq V \\times V\\)</div>"
            ],
            "guid": "daWcTg}E(l",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice orientovaná cesta",
                "Nechť \\(m \\geq 0\\). Orientovaná cesta s \\(m\\) hranami \\(P_m\\) je graf<div><br></div><div>\\( ( \\{0, ..., m\\}, \\{(i, i+1) | i \\in \\{0, ..., m - 1\\} \\} ) \\)</div>"
            ],
            "guid": "i7+o?-mfSz",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice orientovaná kružnice",
                "Nechť \\(n \\geq 2\\). Orientovaná kružnice (nebo též orientovaný cyklus) s \\(n\\) vrcholy (a tím i hranami) \\(C_n\\) je graf \\((\\{1, ..., n\\}, \\{(i, i + 1) | i \\in \\{1, ..., n - 1\\}\\} \\cup \\{(n, 1)\\})\\)"
            ],
            "guid": "fbIxA=a:;F",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Stupeň v orientovaném grafu",
                "Nechť \\(G = (V, E)\\) je orientovaný graf \\(v \\in V\\) jeho vrchol. Pak<div><br></div><div>- vstupní stupeň vrcholu \\(v\\) v orientovaném grafu \\(G\\), \\(deg_G^+(v)\\), je počet orientovaných hran v \\(G\\) končících ve vrcholu \\(v\\), čili</div><div><br></div><div>\\(&nbsp; &nbsp; &nbsp; &nbsp; deg_G^+(v) = |\\{u | u \\in V \\wedge (u, v) \\in E \\}|;&nbsp; &nbsp; &nbsp;\\)</div><div><br></div><div>- výstupní stupeň vrcholu v v orientovaném grafu \\(G\\), \\(deg_G^-(v)\\), je počet orientovaných hran v \\(G\\) vycházejících z vrcholu \\(v\\), čili</div><div><br></div><div>\\( deg_G^-(v)=| \\{ u | u \\in V \\wedge (v, u) \\in E \\} | \\)<br></div><div><br></div><div>- stupeň vrcholu v v orientovaném grafu G je součet jeho vstupního a výstupního stupně</div><div><br></div><div>\\( deg_G(v) = deg_G^+(v) + deg_G^-(v) \\)<br></div>"
            ],
            "guid": "L3,/rROW|V",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Okolí v orientovaném grafu",
                "Vstupní okolí (množina předchůdců) vrcholu \\(v\\), \\(N_G^+(v)\\), je množina všech vrcholů, ze kterých vede hrana do \\(v\\), čili<div>\\(N_G^+(v) = \\{u | u \\in V \\wedge (u, v) \\in E \\}\\)</div><div><br></div><div>Výstupní okolí (množina následovníků) vrcholu \\(v\\),&nbsp;&nbsp;\\(N_G^-(v)\\) , je množina všech vrcholů, do kterých vede hrana z \\(v\\), čili</div><div><br></div><div>\\( N_G^-(v) = \\{ u | u \\in V \\wedge (v,u) \\in E \\}&nbsp; \\)<br></div><div><br></div><div>Okolí vrcholu \\(v\\) je&nbsp;\\( N_G(v) = N_G^+(v) \\cup N_G^-(V) \\)</div>"
            ],
            "guid": "I%37IryL(;",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice zdroje, stroku, izolovaného vrcholu",
                "Vrchol v orientovaného vrcholu G je<div><br></div><div>- izolovaný, pokud \\(deg_G(v) = 0\\)</div><div>- zdroj, pokud&nbsp;\\(deg_G^+(v) = 0\\)</div><div>- stok, pokud&nbsp;\\(deg_G^-(v) = 0\\)</div>"
            ],
            "guid": "mT]9-kMXQ{",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice symetrizace",
                "Symetrizace orientovaného grafu \\(G = (V, E)\\) je neorientovaný graf \\(sym(G) = (V, E')\\), kde<div><br></div><div>\\( \\{ u, v \\} \\in E' \\) právě tehdy, když&nbsp;\\( (u, v) \\in E \\) nebo&nbsp;\\( (v, u) \\in E \\)</div>"
            ],
            "guid": "Hs#yYRp0eX",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Slabě souvislý graf",
                "Orientovaný graf \\(G = (V, E)\\) nazveme slabě souvislý, pokud je souvislá jeho symetrizace \\(sym(G)\\)"
            ],
            "guid": "pzcxGn(mA:",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice silně souvislého grafu",
                "Orientovaný graf \\(G = (V, E)\\) nazveme silně souvislý, pokud pro každé dva vrcholy \\(u, v \\in V\\) existuje v \\(G\\) orientovaná cesta z \\(u\\) do \\(v\\) a současně orientovaná cesta z \\(v\\) do \\(u\\)"
            ],
            "guid": "h5pvGga>o<",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice kostry grafu",
                "Nechť \\(G = (V, E)\\) je souvislý graf. Podgraf \\(K\\) grafu \\(G\\) nazveme kostrou grafu \\(G\\), pokud \\(V(K) = V\\) a \\(K\\) je strom."
            ],
            "guid": "I8=*f_XrrB",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Manhattanská vzdálenost",
                "Delka nejkratší cesty z políčka \\(x\\) do políčka \\(y\\) v pravoúhlém bludišti nazveme Manhattanskou vzdálenost \\(x\\) a \\(y\\)"
            ],
            "guid": "NL|9C]MJ2w",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Vzdálenost dvou vrcholů",
                "Vzdálenenost \\(d(u, v)\\) dvou vrcholů \\(u\\) a \\(v\\) v (orientovaném) grafu \\(G\\) je délka nejkratší (orientované) cesty v \\(G\\) z vrcholu \\(u\\) do vrcholu \\(v\\).<div>Pokud z \\(u\\) do \\(v\\) žádná cesta neexistuje, definujme&nbsp;\\(d(u, v) = \\infty \\)</div>"
            ],
            "guid": "B4W>J]qwIh",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice topologického uspořádání",
                "Topologický uspořádání (TU) orientovaného grafu \\(G = (V, E)\\) je takové seřazení vrcholů \\(V = \\{ v_1, ..., v_n \\}\\), že pro každou orientovanou hranu&nbsp;\\((v_i, v_j) \\in E \\) platí&nbsp;\\( i &lt; j \\)"
            ],
            "guid": "o#:ms?7QzU",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Věta o existenci zdroje a stoku",
                "Nechť \\(G = (V, E)\\) je orientovaný acyklický graf. Potom \\(G\\) obsahuje aspoň jeden zdroj a aspoň jeden stok."
            ],
            "guid": "q$r/xgj>e&",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice zakořeněného stromu",
                "Zakořeněný strom je strom \\(T\\), ve kterém je jeden vrchol \\(r \\in V(T)\\) označen jako kořen"
            ],
            "guid": "r&dZwVkZ[U",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice předek, potomek, otec",
                "Leží-li \\(u\\) na jediné cestě z \\(v\\) do kořene, pak \\(u\\) je předek \\(v\\) a \\(v\\) je potomek \\(u\\). Pokud navic je \\(\\{u, v\\} \\in E(T)\\) hrana, říkáme \\(u\\) je otec \\(v\\) a \\(v\\) je syn \\(u\\)"
            ],
            "guid": "yg!q5R%BI[",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice hladiny",
                "Vrcholy rozdělíme podle vzdálenosti od kořene do hladin: v nulté leží kořen, v první jeho synové atd"
            ],
            "guid": "w|PY%sklS[",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice hloubky vrcholy",
                "Jeho vzdálenost od kořene = číslo hladiny"
            ],
            "guid": "d}u%/4/vwq",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice binárního stromu",
                "Strom nazveme binární, pokud<div>- je zakořeněný</div><div>- každý vrchol má nejvýše dva syny a</div><div>- u synů rozlišujeme, který je levý a který pravý</div>"
            ],
            "guid": "IxwH%74bIH",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice binární minimové haldy",
                "Binární minimová halda je datová struktura tvaru binárního stromu, v jehož každém vrcholu \\(x\\) je uložen jeden klíč \\(k(x)\\) a která splňuje tyto dvě vlastnosti:<div><br></div><div>- Tvar haldy: Strom má všechny hladiny kromě poslední plně obsazené. Poslední hladina je zaplněna od levého okraje směrem k pravému.</div><div><br></div><div>- Haldové uspořádání: Je-li \\(v\\) vrchol a \\(s\\) jeho syn, platí \\(k(v) \\leq k(S)\\)</div>"
            ],
            "guid": "NTWWJ7tefx",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Lemma binární haldy s \\(n\\) prvky má hladin",
                "Binární haldy s \\(n\\) prvky má \\(\\lfloor log(n)&nbsp; + 1 \\rfloor\\) hladin"
            ],
            "guid": "nOV8$&U;^/",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Lemma o binární haldě s \\(n\\) prvky o vnitřních vrcholy a listy",
                "Binární halda s \\(n\\) prvky má \\(\\lfloor \\frac{n}{2} \\rfloor\\) vnitřních vrcholů a \\(\\lceil \\frac{n}{2} \\rceil\\) listů"
            ],
            "guid": "j1qS|fZi5w",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Algoritmus HeapInsert(H,k), BubbleUp(p)",
                "Algoritmus HeapInsert(H,k)<div>(1) n := n + 1</div><div>(2) vlož na první volnou pozici v poslední hladině nový vrchol p s klíčem k</div><div>(3) BubbleUp(p)</div><div><br></div><div>BubbleUp(p)</div><div>(4) Dokud p není kořen:</div><div>(5)&nbsp; &nbsp;o := otec(p)</div><div>(6)&nbsp; &nbsp;Pokud k(o)&nbsp;\\(\\leq\\) k(p)</div><div>(7)&nbsp; &nbsp; &nbsp;return</div><div>(8)&nbsp; &nbsp;prohoď k(o) a k(p)</div><div>(9)&nbsp; &nbsp;p := o</div>"
            ],
            "guid": "g[y>S:xcqk",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Algoritmus HeapExtractMin(H) a BubbleDown(v)",
                "Algoritmus HeapExtractMin(H)<div>(1) r = kořen, l = poslední list, n = velikost haldy</div><div>(2) prohoď k(r) a k(l)</div><div>(3) n := n - 1</div><div>(4) BubbleDown(r)</div><div><br></div><div>BubbleDown(v)</div><div>(5) Pokud má v nějaké syny:</div><div>(6)&nbsp; &nbsp;s := takový syn v, který má nejmenší klíč</div><div>(7)&nbsp; &nbsp;Pokud \\(k(v) \\leq k(s)\\):</div><div>(8)&nbsp; &nbsp; &nbsp;return</div><div>(9)&nbsp; &nbsp;prohoď k(v) a k(s)</div><div>(10) v := s</div>"
            ],
            "guid": "Ma4Ah)c%5G",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Algoritmus HeapBuild",
                "Halda \\(H[1 ... n ]\\)&nbsp;HeapBuild( prvky \\(x_1, ..., x_n\\)&nbsp;)<div>(1) vlož prvky do pole \\(H\\) tak, že \\(H[i] := x_i\\)</div><div>(2) Pro \\(i := \\lfloor \\frac{n}{2} \\rfloor, ..., 1:\\)</div><div>(3)&nbsp; &nbsp;BubbleDown\\((H[i])\\)</div>"
            ],
            "guid": "d@$@s?m-.h",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice amortizované složitosti",
                "Operace \\(A\\) nad dynamickou datovou strukuroumá v daném kontextu svého provádění amortizovanou časovou složitost \\(O(f(n))\\) (označíme \\(O^*(f(n))\\)), pokud posloupnost \\(k\\) opreací \\(A\\) má celkovou složitost \\(O(k * f(n))\\). Parametr \\(n\\) je velikost dynamické množiny po provedení této posloupnosti operací"
            ],
            "guid": "OXq6.H1}#X",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice binomiálního stromu řádu \\(k\\)",
                "Binomiální strom řádu \\(k\\) ( značíme \\(B_k\\) ) je uspořádaný (t.j. záleží na pořadí synů ) zakořeněný strom, pro který platí:<div><br></div><div>1. \\(B_0\\) je tvořen pouze kořenem</div><div>2. Pro&nbsp;\\(k \\geq 1\\) získáme \\(B_k\\) ze stromů \\(B_0, B_1, ..., B_{k-1}\\) tak, že přidáme nový kořen a kořeny těchto stromů uděláme ( takto popořadě ) syny nového kořene</div>"
            ],
            "guid": "N|Ymn,WIX:",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Alternativní definice binomiální stromu řádu k",
                "Binomiální strom řádu \\(k\\) ( značíme \\(B_k'\\)) je uspořádaný zakořeněný strom, pro který platí:<div><br></div><div>1. \\(B_0'\\) je tvořen pouze kořenem</div><div><br></div><div>2. Pro \\(k \\geq 1\\) se \\(B_k'\\) skládá ze stromů \\(B_{k-1}'\\), pod jehož kořenem je jako nejpravější syn napojený další strom \\(B_{k - 1}'\\)</div>"
            ],
            "guid": "vnxP&*[QX=",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Lemma o izomorfismu \\(B_k\\) a \\(B_k'\\)",
                "Stromy \\(B_k\\) a \\(B_k'\\) jsou izomorfní"
            ],
            "guid": "e8E1$<YWPa",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Počet hladin binomiálního stromu \\(k\\)",
                "Počet hladin stromu \\(B_k\\) je roven&nbsp;\\( k + 1\\), stupeň kořene je \\(k\\), a počet vrcholů \\(B_k\\) je roven \\(2^k\\)<br>"
            ],
            "guid": "uZ5G7_K9Yf",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Hloubka binomiálního stromu",
                "Binomiální strom s \\(n\\) vrcholy má hloubku \\(log(n)\\) a počet synů kořene také \\(log(n)\\)"
            ],
            "guid": "G2+]cmJ/]3",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Počet vrcholů stromu \\(B_k\\) v hloubce \\(i\\)",
                "Počet vrcholů stromu \\(B_k\\) v hloubce&nbsp;\\( i \\in \\{0, ..., k\\} \\) je \\(n_k(i) =&nbsp; {k \\choose i} \\)"
            ],
            "guid": "yKl|4h[{,O",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Definice binomiální haldy",
                "Binomiální halda (BH) obsahující&nbsp;\\(n\\) prvků je uspořádaná množina binomiálních stromů&nbsp;\\(T = T_1, ..., T_l\\), kde platí:<div><br></div><div>1. Stromy \\(T_i\\) jsou v \\(T\\) uspořádány vzestupně podle svých řádů.</div><div>2. \\(n = | V(T_1)&nbsp; | + ... + |V(T_l)|\\)</div><div>3. Pro každé nezáporné k se v množině \\(T\\) vyskytuje nejvýše jeden binomiální strom řádu \\(k\\)</div><div>4. Každý vrchol \\(v\\) v každém stromu obsahuje klíč \\(k(v)\\)</div><div>5. Pro každý strom \\(T_i\\) platí haldové uspořádání klíčů, čili&nbsp;\\( \\forall v \\in V (T_i )\\) a&nbsp;\\( \\forall \\) jeho syny&nbsp;\\( s_j, j = 1, ..., m \\), platí&nbsp;\\( k(v) \\leq k(s_j) \\)</div>"
            ],
            "guid": "G}Sm@v`G^D",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Vlastnosti BH o binárním zápisu",
                "Binomiální strom \\(B_i\\) se vyskytuje v seznamu \\(T\\) \\(n\\)-prvkové BH právě tehdy, když ve dvojkovém zápisu \\(b_kb_{k-1}...b_0\\) čísla \\(n\\) je \\(b_i = 1\\)"
            ],
            "guid": "K:k0KI)H53",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Z kolika stromů se skládá \\(n\\)-prvková BH",
                "\\(n\\)-prvková BH se skládá z&nbsp;\\( O(log(n)) \\) binomiálních stromů"
            ],
            "guid": "D((ljae!.~",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Algoritmus BHmerge(A, B)",
                "<div>Algoritmus BHmerge(A, B)<br></div>(1) scitanci[0..2]<div>(2) carry := null</div><div>(3) neprazdnych := 2</div><div>(4) akt_řád := 0</div><div>(5) Dokud neprázdných \\(\\geq\\) 2:</div><div>(6)&nbsp; &nbsp;neprazdnych := 0</div><div>(7)&nbsp; &nbsp;pocet := 0</div><div>(8)&nbsp; &nbsp;Pokud A je neprázdná:</div><div>(9)&nbsp; &nbsp; &nbsp;neprázdných++</div><div>(10)&nbsp; &nbsp;a := strom je nejnižšího řádu v A</div><div>(11)&nbsp; &nbsp;Pokud řád(a) = akt_řád:</div><div>(12)&nbsp; &nbsp; &nbsp;scitanci[pocet] := \\(a\\)</div><div>(13)&nbsp; &nbsp; &nbsp;pocet++</div><div>(14)&nbsp; &nbsp; &nbsp;vyřaď \\(a\\) z \\(A\\)</div><div>(15) B je neprázdná:</div><div>(16)&nbsp; &nbsp;neprazdnych++</div><div>(17)&nbsp; &nbsp;b := strom nejnižšího řádu v B</div><div>(18)&nbsp; &nbsp;Pokud řád(b) = akt_řád:</div><div>(19)&nbsp; &nbsp; &nbsp;scitanci[pocet] := \\(b\\)</div><div>(20)&nbsp; &nbsp; &nbsp;pocet++</div><div>(21)&nbsp; &nbsp; &nbsp;vyřaď \\(b\\) z \\(B\\)</div><div>(22) Pokud carry není null</div><div>(23)&nbsp; &nbsp;neprzadnych++</div><div>(24)&nbsp; &nbsp;scitanci[pocet] := carry</div><div>(25)&nbsp; &nbsp;pocet++</div><div>(26)&nbsp; &nbsp;carry := null</div><div>(27) Pokud pocet = 3:</div><div>(28)&nbsp; &nbsp;zapiš scitanci[2] do vystupu C</div><div>(29)&nbsp; &nbsp;carry := BHMergeTree(scitanci[0], scitanci[1])</div><div>(30) Pokud pocet = 2:</div><div>(31)&nbsp; &nbsp;carry := BHMergeTree(scitanci[0], scitanci[1])</div><div>(32) Pokud pocet = 1</div><div>(33)&nbsp; &nbsp;zapiš scitanci[0] do výstupu C</div><div>(34) akt_řád++</div><div>(35) Přeřaď do C zbytek BG A nebo B (pokud ještě něco zbývá)</div><div>(36) Přepoj ukazatel na minimum na menší z minim z A a B</div>"
            ],
            "guid": "Hyrv`&l!zE",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Algoritmus BHMergeTree\\((T_1, T_2)\\)",
                "Algoritmus BHMergeTree\\((T_1, T_2)\\)<div>Vstup: Binomiální stromy \\(T_1\\), \\(T_2\\) takovém že řád(\\(T_1\\)) = řád(\\(T_2\\))</div><div>Výstup: Výsledný strom \\(T_{out}\\)</div><div>(1) Pokud k(kořen\\((T_1)\\)) \\(\\leq\\) k(kořen\\((T_2)\\))</div><div>(2)&nbsp; &nbsp;Připoj kořen(\\(T_2\\)) jako nejpravějšího syna pod kořen (\\(T_1\\))</div><div>(3)&nbsp; &nbsp;\\(T_{out} := T_1 \\)</div><div>(4) Jinak:</div><div>(5)&nbsp; &nbsp;Připoj kořen(\\(T_1\\)) jako nejpravějšího syna pod kořen (\\(T_2\\))</div><div>(6)&nbsp; &nbsp;\\(T_{out} := T_2\\)</div>"
            ],
            "guid": "duZxw(oK+<",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Operace BHInsert\\((H, x)\\):",
                "Operace BHInsert\\((H, x)\\):<div>(1) Vytvoříme BH \\(H'\\) s jedním prvkem \\(x\\)</div><div>(2) BHMerge\\((H, H')\\)</div>"
            ],
            "guid": "m8Fw!B`mD@",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Algoritmus BHExtractMin(H):",
                "<div>Algoritmus BHExtractMin(H):<br></div>(1) Najdi v BH \\(H\\) strom \\(T\\), jehož kořen je minimem<div>(2) Odpoj tento strom \\(T\\) z BH \\(H\\)</div><div>(3) Odtrhni z \\(T\\) jeho kořen</div><div>(4) Invertuj seznam jeho synů, čimž vznikne nová BH \\(H'\\)</div><div>(5) Proveď BHMerge\\((H, H')\\)</div>"
            ],
            "guid": "yd7,X_xMtj",
            "note_model_uuid": "15a831d2-5529-11eb-bb95-38d5479d0148",
            "tags": []
        }
    ]
}